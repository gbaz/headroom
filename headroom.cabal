cabal-version: 1.12

-- This file has been generated from package.yaml by hpack version 0.31.2.
--
-- see: https://github.com/sol/hpack
--
-- hash: 2c50c31272063b2b81a25f27ed42dc1375c1523d213662f8ee322e7ab10ec095

name:           headroom
version:        0.1.1.0
synopsis:       License Header Manager
description:    So you are tired of managing license headers in your codebase by hand? Then Headroom is the right tool for you! Now you can define your license header as Mustache template, put all the variables (such as author's name, year, etc.) into the YAML config file and Headroom will take care to add such license headers to all your source code files.
category:       Utils
homepage:       https://github.com/vaclavsvejcar/headroom
bug-reports:    https://github.com/vaclavsvejcar/headroom/issues
author:         Vaclav Svejcar
maintainer:     vaclav.svejcar@gmail.com
copyright:      Copyright (c) 2019-2020 Vaclav Svejcar
license:        BSD3
license-file:   LICENSE
build-type:     Simple
extra-source-files:
    CHANGELOG.md
    LICENSE
    README.md
    embedded/config-file.yaml
    embedded/license/apache2/css.mustache
    embedded/license/apache2/haskell.mustache
    embedded/license/apache2/html.mustache
    embedded/license/apache2/java.mustache
    embedded/license/apache2/js.mustache
    embedded/license/apache2/scala.mustache
    embedded/license/bsd3/css.mustache
    embedded/license/bsd3/haskell.mustache
    embedded/license/bsd3/html.mustache
    embedded/license/bsd3/java.mustache
    embedded/license/bsd3/js.mustache
    embedded/license/bsd3/scala.mustache
    embedded/license/gpl2/css.mustache
    embedded/license/gpl2/haskell.mustache
    embedded/license/gpl2/html.mustache
    embedded/license/gpl2/java.mustache
    embedded/license/gpl2/js.mustache
    embedded/license/gpl2/scala.mustache
    embedded/license/gpl3/css.mustache
    embedded/license/gpl3/haskell.mustache
    embedded/license/gpl3/html.mustache
    embedded/license/gpl3/java.mustache
    embedded/license/gpl3/js.mustache
    embedded/license/gpl3/scala.mustache
    embedded/license/mit/css.mustache
    embedded/license/mit/haskell.mustache
    embedded/license/mit/html.mustache
    embedded/license/mit/java.mustache
    embedded/license/mit/js.mustache
    embedded/license/mit/scala.mustache

source-repository head
  type: git
  location: https://github.com/vaclavsvejcar/headroom

library
  exposed-modules:
      Headroom.AppConfig
      Headroom.Command
      Headroom.Command.Gen
      Headroom.Command.Gen.Env
      Headroom.Command.Run
      Headroom.Command.Run.Env
      Headroom.Command.Shared
      Headroom.Embedded
      Headroom.FileSystem
      Headroom.FileType
      Headroom.Header
      Headroom.Header.Impl
      Headroom.Header.Impl.CSS
      Headroom.Header.Impl.Haskell
      Headroom.Header.Impl.HTML
      Headroom.Header.Impl.Java
      Headroom.Header.Impl.JS
      Headroom.Header.Impl.Scala
      Headroom.Header.Utils
      Headroom.License
      Headroom.Meta
      Headroom.Template
      Headroom.Template.Mustache
      Headroom.Text
      Headroom.Types
      Headroom.Types.Utils
  other-modules:
      Paths_headroom
  hs-source-dirs:
      src
  ghc-options: -optP-Wno-nonportable-include-path -Wall -Wcompat -Widentities -Wincomplete-record-updates -Wincomplete-uni-patterns -Wpartial-fields -Wredundant-constraints -Werror=incomplete-patterns
  build-depends:
      aeson
    , base >=4.7 && <5
    , either
    , file-embed
    , lens
    , mustache
    , optparse-applicative
    , pcre-heavy
    , pcre-light
    , rio
    , template-haskell
    , text
    , time
    , validation
    , yaml
  default-language: Haskell2010

executable headroom
  main-is: Main.hs
  other-modules:
      Paths_headroom
  hs-source-dirs:
      app
  ghc-options: -optP-Wno-nonportable-include-path -Wall -Wcompat -Widentities -Wincomplete-record-updates -Wincomplete-uni-patterns -Wpartial-fields -Wredundant-constraints -Werror=incomplete-patterns -threaded -rtsopts -with-rtsopts=-N
  build-depends:
      base >=4.7 && <5
    , headroom
    , optparse-applicative
    , rio
  default-language: Haskell2010

test-suite doctest
  type: exitcode-stdio-1.0
  main-is: Main.hs
  other-modules:
      Paths_headroom
  hs-source-dirs:
      doctest
  ghc-options: -optP-Wno-nonportable-include-path -Wall -Wcompat -Widentities -Wincomplete-record-updates -Wincomplete-uni-patterns -Wpartial-fields -Wredundant-constraints -Werror=incomplete-patterns
  build-depends:
      base >=4.7 && <5
    , doctest
    , optparse-applicative
    , rio
  default-language: Haskell2010

test-suite spec
  type: exitcode-stdio-1.0
  main-is: Spec.hs
  other-modules:
      Headroom.AppConfigSpec
      Headroom.FileSystemSpec
      Headroom.FileTypeSpec
      Headroom.Header.Impl.CSSSpec
      Headroom.Header.Impl.HaskellSpec
      Headroom.Header.Impl.HTMLSpec
      Headroom.Header.Impl.JavaSpec
      Headroom.Header.Impl.JSSpec
      Headroom.Header.Impl.ScalaSpec
      Headroom.Header.UtilsSpec
      Headroom.HeaderSpec
      Headroom.LicenseSpec
      Headroom.Template.MustacheSpec
      Headroom.TextSpec
      Headroom.Types.UtilsSpec
      Headroom.TypesSpec
      Test.Utils
      Paths_headroom
  hs-source-dirs:
      test
  ghc-options: -optP-Wno-nonportable-include-path -Wall -Wcompat -Widentities -Wincomplete-record-updates -Wincomplete-uni-patterns -Wpartial-fields -Wredundant-constraints -Werror=incomplete-patterns
  build-depends:
      aeson
    , base >=4.7 && <5
    , headroom
    , hspec
    , optparse-applicative
    , rio
  default-language: Haskell2010
